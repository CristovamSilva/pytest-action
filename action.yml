name: "Test with Pytest"

description: "Checkout Code, Setup Python, Install Dependencies and run Pytest"

inputs:
  dependencies-directory:
    description: Where to search for requirements files.
    required: false
    default: "."
    type: directory
    validation:
      rule: directoryExists

  deploy-keys:
    description: Packages deploy keys.
    required: false
    default: ""
    type: string

  tests-directory:
    description: Directory containing test suites.
    required: true
    type: directory
    validation:
      rule: directoryExists

  package-directory:
    description: What package to test.
    required: true
    type: string

  extra-arguments:
    description: Additonal args to pass to pytest.
    required: false
    type: string

  ignore-errors:
    description: Whether to continue on error.
    required: false
    default: false
    type: boolean

  execution-report:
    description: Path to save execution report.
    required: false
    default: xunit-result.xml
    type: string
  coverage-report-type:
    description: Path to save coverage report.
    required: false
    default: "xml"
    type: string
    validation:
      rule: enum
      enum: ["xml", "html", "lcov", "annotate"]
  coverage-report:
    description: Path to save coverage report.
    required: false
    default: coverage.xml
    type: string

runs:
  using: "composite"
  steps:
    - name: Load Cache & Dependencies
      uses: CristovamSilva/python-dependencies-action@master
      with:
        dependencies-directory: ${{ inputs.dependencies-directory }}
        deploy-keys: ${{ inputs.deploy-keys }}
        application: true
        test: true

    - name: Test Package
      working-directory: ${{ inputs.tests-directory }}
      shell: bash
      continue-on-error: ${{ inputs.ignore-errors == 'true' }}
      run: >
        pytest ${{ inputs.package-directory }}
        --cov=${{ inputs.package-directory }}
        --cov-report ${{ inputs.coverage-report-type }}:${{ inputs.coverage-report }}
        --junitxml=${{ inputs.execution-report }}
        ${{ inputs.extra-arguments }}

    - name: Upload pytest execution results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-exec-results
        path: ${{ inputs.tests-directory }}/${{ inputs.execution-report }}

    - name: Upload pytest coverage results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-cov-results
        path: ${{ inputs.tests-directory }}/${{ inputs.coverage-report }}
